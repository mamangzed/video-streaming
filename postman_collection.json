{
	"info": {
		"_postman_id": "api-s3-collection",
		"name": "API S3 - Video & Image Upload Service",
		"description": "Complete API collection for S3 upload and video processing service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "api-s3"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Check if the API is running and healthy"
			},
			"response": []
		},
		{
			"name": "Upload Media (with Video Optimization)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": [],
							"description": "File to upload (image or video)"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/v1/upload",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"upload"
					]
				},
				"description": "Upload file with automatic video optimization using FFmpeg. Videos will be processed in background."
			},
			"response": []
		},
		{
			"name": "Upload Direct (No Optimization)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": [],
							"description": "File to upload directly without processing"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/v1/upload-direct",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"upload-direct"
					]
				},
				"description": "Upload file directly to S3 without any video optimization"
			},
			"response": []
		},
		{
			"name": "Upload Large File (No Size Limit)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": [],
							"description": "Large file to upload without size restrictions"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/v1/upload-large",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"upload-large"
					]
				},
				"description": "Upload large files without size limitations"
			},
			"response": []
		},
		{
			"name": "Upload Local (Testing)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": [],
							"description": "File to upload to local storage for testing"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/v1/upload-local",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"upload-local"
					]
				},
				"description": "Upload file to local storage for testing without S3"
			},
			"response": []
		},
		{
			"name": "Get Media Info",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/media/{{media_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"media",
						"{{media_id}}"
					]
				},
				"description": "Get detailed information about a media file"
			},
			"response": []
		},
		{
			"name": "Get Processing Progress",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/media/{{media_id}}/progress",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"media",
						"{{media_id}}",
						"progress"
					]
				},
				"description": "Get video processing progress for a media file"
			},
			"response": []
		},
		{
			"name": "Get Video Stream Info",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/media/{{media_id}}/stream",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"media",
						"{{media_id}}",
						"stream"
					]
				},
				"description": "Get video streaming information with available qualities"
			},
			"response": []
		},
		{
			"name": "Stream Video (720p)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Range",
						"value": "bytes=0-",
						"description": "Range header for video streaming"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/media/{{media_id}}/stream/720p",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"media",
						"{{media_id}}",
						"stream",
						"720p"
					]
				},
				"description": "Stream video at 720p quality with HTTP Range support"
			},
			"response": []
		},
		{
			"name": "Stream Video (1080p)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Range",
						"value": "bytes=0-",
						"description": "Range header for video streaming"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/media/{{media_id}}/stream/1080p",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"media",
						"{{media_id}}",
						"stream",
						"1080p"
					]
				},
				"description": "Stream video at 1080p quality with HTTP Range support"
			},
			"response": []
		},
		{
			"name": "Get Thumbnail",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/media/{{media_id}}/thumbnail",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"media",
						"{{media_id}}",
						"thumbnail"
					]
				},
				"description": "Get video thumbnail image"
			},
			"response": []
		},
		{
			"name": "Delete Media",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/media/{{media_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"media",
						"{{media_id}}"
					]
				},
				"description": "Delete media file from S3"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set default headers for all requests",
					"pm.request.headers.add({",
					"    key: 'Accept',",
					"    value: 'application/json'",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Common test script for all requests",
					"pm.test('Status code is valid', function () {",
					"    pm.response.to.have.status(200, 202, 400, 404, 413, 500, 503);",
					"});",
					"",
					"pm.test('Response time is less than 30 seconds', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(30000);",
					"});",
					"",
					"// Test for JSON responses",
					"if (pm.response.headers.get('Content-Type') && pm.response.headers.get('Content-Type').includes('application/json')) {",
					"    pm.test('Response is valid JSON', function () {",
					"        pm.response.to.be.json;",
					"    });",
					"    ",
					"    pm.test('Response has success field', function () {",
					"        const jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.have.property('success');",
					"    });",
					"}",
					"",
					"// Auto-extract media_id from upload responses",
					"if (pm.response.headers.get('Content-Type') && pm.response.headers.get('Content-Type').includes('application/json')) {",
					"    const jsonData = pm.response.json();",
					"    if (jsonData.success && jsonData.media && jsonData.media.id) {",
					"        pm.environment.set('media_id', jsonData.media.id);",
					"        console.log('Media ID extracted:', jsonData.media.id);",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "media_id",
			"value": "",
			"type": "string"
		}
	]
} 